{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/pages/posts.js"],"names":["Header","siteTitle","className","Link","to","defaultProps","children","data","useStaticQuery","site","siteMetadata","title","Posts","posts","allMarkdownRemark","edges","filter","post","node","frontmatter","length","map","key","id","path","date"],"mappings":"6LAIMA,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACb,0BAAQC,UAAU,UAChB,uBAAKA,UAAU,sDACb,gBAAC,EAAAC,KAAD,CAAMC,GAAG,IAAIF,UAAU,mBACpBD,GAEH,uBAAKC,UAAU,2EACb,gBAAC,EAAAC,KAAD,CAAMC,GAAG,IAAIF,UAAU,YAAvB,QAGA,gBAAC,EAAAC,KAAD,CAAMC,GAAG,SAASF,UAAU,YAA5B,SAGA,gBAAC,EAAAC,KAAD,CAAMC,GAAG,SAASF,UAAU,YAA5B,aAYRF,EAAOK,aAAe,CACpBJ,UAAU,IAGZ,QCOA,EA1Be,SAAC,GAAkB,IAAD,EAAfK,EAAe,EAAfA,SACVC,GAAOC,oBAAe,cAU5B,OACE,gCACE,gBAAC,EAAD,CAAQP,WAAW,UAAAM,EAAKE,KAAKC,oBAAV,eAAwBC,QAAxB,UACnB,uBAAKT,UAAU,uEACb,wBAAMA,UAAU,0BAA0BI,GAC1C,qD,iHCzBO,SAASM,EAAT,GAA0B,IACxBC,EADuB,EAARN,KACAO,kBAAtBC,MACR,OACE,gBAAC,IAAD,KACE,uBAAKb,UAAU,cACZW,EACEG,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAKC,YAAYR,MAAMS,OAAS,KACpDC,KAAI,YAAqB,IAAZJ,EAAW,EAAjBC,KACN,OACE,uBAAKhB,UAAU,oBAAoBoB,IAAKL,EAAKM,IAC3C,gBAAC,EAAApB,KAAD,CAAMC,GAAIa,EAAKE,YAAYK,MAC1BP,EAAKE,YAAYR,OAFpB,IAGWM,EAAKE,YAAYM","file":"component---src-pages-posts-js-55a65213d526f9cb0364.js","sourcesContent":["import * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\n\nconst Header = ({ siteTitle }) => (\n  <header className=\"w-full\">\n    <div className=\"header-container flex flex-col items-center w-full\">\n      <Link to=\"/\" className=\"site-title-link\">\n        {siteTitle}\n      </Link>\n      <nav className=\"flex items-center justify-around p-1 mx-auto text-white bg-black w-full\">\n        <Link to=\"/\" className=\"nav-item\">\n          Home\n        </Link>\n        <Link to=\"/about\" className=\"nav-item\">\n          About\n        </Link>\n        <Link to=\"/posts\" className=\"nav-item\">\n          Posts\n        </Link>\n      </nav>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\n// import \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <div className=\"main-container mt-8 mb-16 flex flex-col items-center content-center\">\n        <main className=\"prose max-w-none w-2/3\">{children}</main>\n        <footer>Â© 2021 Ben Dyer</footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\n\nexport default function Posts({ data }) {\n  const { edges: posts } = data.allMarkdownRemark\n  return (\n    <Layout>\n      <div className=\"blog-posts\">\n        {posts\n          .filter(post => post.node.frontmatter.title.length > 0)\n          .map(({ node: post }) => {\n            return (\n              <div className=\"blog-post-preview\" key={post.id}>\n                <Link to={post.frontmatter.path}>\n                {post.frontmatter.title}\n                </Link> {post.frontmatter.date}\n              </div>\n            )\n          })}\n      </div>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query PostsQuery {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}